/**
 * THE PROBLEM

        The sequence of triangle numbers is generated by adding the natural numbers. So the 7th triangle number
        would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28. The first ten terms would be:

        1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

        Let us list the factors of the first seven triangle numbers:

        1: 1
        3: 1,3
        6: 1,2,3,6
        10: 1,2,5,10
        15: 1,3,5,15
        21: 1,3,7,21
        28: 1,2,4,7,14,28

        We can see that 28 is the first triangle number to have over five divisors.

        What is the value of the first triangle number to have over five hundred divisors?

 */

public class HighlyDivisibleNumber {

    public static void main(String[] args){

       System.out.println(getHiglyDivisibleTriangleNUmber(6));

    }

    /**
     *
     * @param n - Max number of divisors
     * @return triangle_number - the first triangle number with the specified number of divisors
     */

    public static int getHiglyDivisibleTriangleNUmber(int n){
        int triangle_number = 0;
        int i = 0;
        while (getNoOfDivisors(triangle_number) < n){
            triangle_number += i;
            i++;

        }
        return triangle_number;
    }


    /**
     *
     * @param n
     * @return
     */
    public static int getNoOfDivisors(int n) {
        int noOfDivisors = 0;
        int sqrt = (int) Math.floor(Math.sqrt(n));

        for (int a=1; a<=sqrt; a++) {
            if (n % a == 0) {
                if (n / a == a) {
                    noOfDivisors++;
                } else {
                    noOfDivisors += 2;
                }
            }
        }

        return noOfDivisors;
    }
}
